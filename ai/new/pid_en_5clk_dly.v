// -------------------------------------------------------------
//
// File Name: hdlsrc\pid_en_5clk_dly.v
// Created: 2012-12-03 13:37:39
// Generated by MATLAB 7.6 and Simulink HDL Coder 1.3
//
//
// -------------------------------------------------------------


// -------------------------------------------------------------
//
// Module: pid_en_5clk_dly
// Source Path: fofb_pid_20b/pid_en_5clk_dly
// Hierarchy Level: 1
//
//
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module pid_en_5clk_dly
          (
           clk,
           reset,
           enb,
           t_in,
           t_out
          );


  input   clk;
  input   reset;
  input   enb;
  input   t_in;
  output  t_out;


  wire inv1_out1;
  wire inv2_out1;
  wire Delay_out1;
  wire Logical_Operator2_out1;
  reg  int_delay_pipe [0:4];  // boolean [5]

  assign inv1_out1 = !t_in;

  assign inv2_out1 = !inv1_out1;

  always @ (posedge clk or posedge reset)
    begin: Delay_process
      if (reset == 1'b1) begin
        int_delay_pipe[0] <= 1'b0;
        int_delay_pipe[1] <= 1'b0;
        int_delay_pipe[2] <= 1'b0;
        int_delay_pipe[3] <= 1'b0;
        int_delay_pipe[4] <= 1'b0;
      end
      else begin
        if (enb == 1'b1) begin
          int_delay_pipe[1] <= int_delay_pipe[0];
          int_delay_pipe[2] <= int_delay_pipe[1];
          int_delay_pipe[3] <= int_delay_pipe[2];
          int_delay_pipe[4] <= int_delay_pipe[3];
          int_delay_pipe[0] <= inv2_out1;
        end
      end
    end // Delay_process
  assign Delay_out1 = int_delay_pipe[4];

  assign Logical_Operator2_out1 =  inv1_out1 & Delay_out1;

  assign t_out = Logical_Operator2_out1;

endmodule  // pid_en_5clk_dly

