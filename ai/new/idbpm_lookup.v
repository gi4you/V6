
/*
 *	ID BPM location lookup table'
 *
 *	8/29/13
 *	kha@bnl'gov
 *
 
 % 10/06/14
 %Matlab lookup generation: 
 %                                 bpm9    bpm8    bpm7
 k = 30;
 for  cnt = 1:k
     addr = cnt-1;
     fprintf( 'C#%d (addr == 7.d%d)  ? {10.d%d, 10.d%d, 10.d%d, 10.d%d, 10.d%d} :\n', ...
             cnt, addr, 24+addr*26, 15+addr*26, 14+addr*26, 13+addr*26, 12+addr*26 );
 end

 
 % bpm_lookup
% C#1 (addr == 7.d0)  ? {10.d24, 10.d15, 10.d14, 10.d13, 10.d12} :
% C#2 (addr == 7.d1)  ? {10.d50, 10.d41, 10.d40, 10.d39, 10.d38} :
% C#3 (addr == 7.d2)  ? {10.d76, 10.d67, 10.d66, 10.d65, 10.d64} :
% C#4 (addr == 7.d3)  ? {10.d102, 10.d93, 10.d92, 10.d91, 10.d90} :
% C#5 (addr == 7.d4)  ? {10.d128, 10.d119, 10.d118, 10.d117, 10.d116} :
% C#6 (addr == 7.d5)  ? {10.d154, 10.d145, 10.d144, 10.d143, 10.d142} :
% C#7 (addr == 7.d6)  ? {10.d180, 10.d171, 10.d170, 10.d169, 10.d168} :
% C#8 (addr == 7.d7)  ? {10.d206, 10.d197, 10.d196, 10.d195, 10.d194} :
% C#9 (addr == 7.d8)  ? {10.d232, 10.d223, 10.d222, 10.d221, 10.d220} :
% C#10 (addr == 7.d9)  ? {10.d258, 10.d249, 10.d248, 10.d247, 10.d246} :
% C#11 (addr == 7.d10)  ? {10.d284, 10.d275, 10.d274, 10.d273, 10.d272} :
% C#12 (addr == 7.d11)  ? {10.d310, 10.d301, 10.d300, 10.d299, 10.d298} :
% C#13 (addr == 7.d12)  ? {10.d336, 10.d327, 10.d326, 10.d325, 10.d324} :
% C#14 (addr == 7.d13)  ? {10.d362, 10.d353, 10.d352, 10.d351, 10.d350} :
% C#15 (addr == 7.d14)  ? {10.d388, 10.d379, 10.d378, 10.d377, 10.d376} :
% C#16 (addr == 7.d15)  ? {10.d414, 10.d405, 10.d404, 10.d403, 10.d402} :
% C#17 (addr == 7.d16)  ? {10.d440, 10.d431, 10.d430, 10.d429, 10.d428} :
% C#18 (addr == 7.d17)  ? {10.d466, 10.d457, 10.d456, 10.d455, 10.d454} :
% C#19 (addr == 7.d18)  ? {10.d492, 10.d483, 10.d482, 10.d481, 10.d480} :
% C#20 (addr == 7.d19)  ? {10.d518, 10.d509, 10.d508, 10.d507, 10.d506} :
% C#21 (addr == 7.d20)  ? {10.d544, 10.d535, 10.d534, 10.d533, 10.d532} :
% C#22 (addr == 7.d21)  ? {10.d570, 10.d561, 10.d560, 10.d559, 10.d558} :	d557, d556
% C#23 (addr == 7.d22)  ? {10.d596, 10.d587, 10.d586, 10.d585, 10.d584} :
% C#24 (addr == 7.d23)  ? {10.d622, 10.d613, 10.d612, 10.d611, 10.d610} :
% C#25 (addr == 7.d24)  ? {10.d648, 10.d639, 10.d638, 10.d637, 10.d636} :
% C#26 (addr == 7.d25)  ? {10.d674, 10.d665, 10.d664, 10.d663, 10.d662} :
% C#27 (addr == 7.d26)  ? {10.d700, 10.d691, 10.d690, 10.d689, 10.d688} :
% C#28 (addr == 7.d27)  ? {10.d726, 10.d717, 10.d716, 10.d715, 10.d714} :
% C#29 (addr == 7.d28)  ? {10.d752, 10.d743, 10.d742, 10.d741, 10.d740} :
% C#30 (addr == 7.d29)  ? {10.d778, 10.d769, 10.d768, 10.d767, 10.d766} :



	09/22/16
		Added Cell 19 and cell 2.
    
    9/01/22
        Added lookup table for cell 27 and 20
        

 */

`timescale 1 ns / 1 ns

module IDBPM_LOOKUP
(
    addr,		//ID number 0 - 59	
    add_x1,
    add_y1,
    add_x2,
    add_y2,
    add_cells
    //Mux_Data_o	//SDI global memory address location, mapping with real BPM locations
);

input   [6:0] addr; 
output	[9:0] add_x1, add_y1, add_x2, add_y2, add_cells;
wire [49:0] Multiport_Switch_out1;  

	
		//order              {sdi status,  y2,    x2,    y1,    x1}
	assign Multiport_Switch_out1 =                  
		/* DAY ONE ID's */
		(addr == 7'd0)  ? {10'd76,  10'd67,  10'd66,  10'd65,  10'd64} :	// CELL 3		{  3,  77,  76,   69,  68,   67,  66,   65,  64 },
		
		//% C#5 (addr == 7.d4)  ? {10.d128, 10.d119, 10.d118, 10.d117, 10.d116} :
		(addr == 7'd1)  ? {10'd128, 10'd119, 10'd118, 10'd117, 10'd116} :	// CELL5-1		{  5, 129, 128,  121, 120,  119, 118,  117, 116 },
		(addr == 7'd2)  ? {10'd128, 10'd121, 10'd120, 10'd119, 10'd118} :	// CELL5-2
//		% C#10 (addr == 7.d9)  ? {10.d258, 10.d249, 10.d248, 10.d247, 10.d246} :
		(addr == 7'd3)  ? {10'd258, 10'd249, 10'd248, 10'd247, 10'd246} :	// CELL 10		{ 10, 259, 258,  251, 250,  249, 248,  247, 246 },
		(addr == 7'd4)  ? {10'd284, 10'd275, 10'd274, 10'd273, 10'd272} :	// CELL 11		{ 11, 285, 284,  277, 276,  275, 274,  273, 272 },
		(addr == 7'd5)  ? {10'd596, 10'd587, 10'd586, 10'd585, 10'd584} :	// CELL 23-1	{ 23, 597, 596,  589, 588,  587, 586,  585, 584 },
//		(addr == 7'd5)  ? {10'd596, 10'd587, 10'd586, 10'd557, 10'd556} :	// CELL 23-1	BPM 22-6 and BPM 23-8, 22-7 pick-up repaire
		(addr == 7'd6)  ? {10'd596, 10'd589, 10'd588, 10'd587, 10'd586} :	// CELL 23-2
		
  		(addr == 7'd7)  ? {10'd726, 10'd717, 10'd716, 10'd715, 10'd714} :	// CELL 28		{ 28, 727, 726,  719, 718,  717, 716,  715, 714 },
		(addr == 7'd8)  ? {10'd207, 10'd197, 10'd196, 10'd195, 10'd194} :	// CELL 8		{  8, 207, 206,  199, 198,  197, 196,  195, 194 },
		(addr == 7'd9)  ? {10'd466, 10'd457, 10'd456, 10'd455, 10'd454} :	// CELL 18		{ 18, 467, 466,  459, 458,  457, 456,  455, 454 },

		//ABIX BEAMLINE
		//% C#16 (addr == 7.d15)  ? {10.d414, 10.d405, 10.d404, 10.d403, 10.d402} :		
		(addr == 7'd10)  ? {10'd414, 10'd405, 10'd404, 10'd403, 10'd402} :	//CELL 16
		
		//% C#17 (addr == 7.d16)  ? {10.d440, 10.d431, 10.d430, 10.d429, 10.d428} :		
		(addr == 7'd11)  ? {10'd440, 10'd431, 10'd430, 10'd429, 10'd428} :	//CELL 17-1 BPM 7 & 8
		(addr == 7'd12)  ? {10'd440, 10'd433, 10'd432, 10'd431, 10'd430} :	//CELL 17-2	BPM 8 & 9
		
		
		// #4-1, #4-2		
		// NEXT Beamline		
		//(addr == 7'd13)  ? {10'd102, 10'd93, 10'd92, 10'd91, 10'd90} :	// CELL 4-1		BPM 7 & 8 % C#4 (addr == 7.d3)  ? {10.d102, 10.d93, 10.d92, 10.d91, 10.d90} :		
		
		(addr == 7'd13)  ? {10'd102, 10'd93, 10'd92, 10'd63, 10'd62} :	// BPM4-8 and BPM 3-6
		(addr == 7'd14)  ? {10'd102, 10'd97, 10'd96, 10'd95, 10'd94} :	// CELL 4-2		BPM 9 & 10
	
		////////////////////////////////
		// 12/11/2015 
		// CELL 12
		// #12-1 2	(addr == 7.d11)  ? {10.d310, 10.d301, 10.d300, 10.d299, 10.d298} :
		(addr == 7'd15)  ? {10'd310, 10'd301, 10'd300, 10'd299, 10'd298} :	// CELL 12-1  BPM 7 & 8
		/* found off calculation not matched with real calculation */
		(addr == 7'd16)  ? {10'd310, 10'd305, 10'd304, 10'd303, 10'd302} :	// CELL 12-2  BPM 9 & 10
		
		// C#21 (addr == 7.d20)  ? {10.d544, 10.d535, 10.d534, 10.d533, 10.d532} :
		(addr == 7'd17)  ? {10'd544, 10'd535, 10'd534, 10'd533, 10'd532} :	
		
		// 09/22/16 added
		//CELL 19
		(addr == 7'd18)  ? {10'd492, 10'd483, 10'd482, 10'd481, 10'd480} :	// CELL 19-1  BPM 7 & 8
		(addr == 7'd19)  ? {10'd492, 10'd487, 10'd486, 10'd485, 10'd484} :
		//CELL 02
		(addr == 7'd20)  ? {10'd50, 10'd41, 10'd40, 10'd39, 10'd38} :
		
		//Cell 07
 //% C#7 (addr == 7.d6)  ? {10.d180, 10.d171, 10.d170, 10.d169, 10.d168} :
		(addr == 7'd21)  ? {10'd180, 10'd171, 10'd170, 10'd169, 10'd168} :
		(addr == 7'd22)  ? {10'd180, 10'd175, 10'd174, 10'd173, 10'd172} :
		

        //Cell 27 and 20
		//% C#27 (addr == 7.d26)  ? {10.d700, 10.d691, 10.d690, 10.d689, 10.d688} :
        //% C#20 (addr == 7.d19)  ? {10.d518, 10.d509, 10.d508, 10.d507, 10.d506} :
        (addr == 7'd23)  ? {10'd700, 10'd691, 10'd690, 10'd689, 10'd688} :  //CELL 27
        (addr == 7'd24)  ? {10'd518, 10'd509, 10'd508, 10'd507, 10'd506} :  //CELL 20
        
        
        
        
		/////////////////////////////////////////////////////////////
		////////////// TEST /////////////////////////////////////////
		/////////////////////////////////////////////////////////////
		//% C#16 (addr == 7.d15)  ? {10.d414, 10.d405, 10.d404, 10.d403, 10.d402} :		
		(addr == 7'd25)  ? {10'd414, 10'd405, 10'd404, 10'd403, 10'd402} :	//CELL 16
		
		//% C#17 (addr == 7.d16)  ? {10.d440, 10.d431, 10.d430, 10.d429, 10.d428} :		
		(addr == 7'd26)  ? {10'd440, 10'd431, 10'd430, 10'd429, 10'd428} :	//CELL 17-1 BPM 7 & 8
		(addr == 7'd27)  ? {10'd440, 10'd433, 10'd432, 10'd431, 10'd430} :	//CELL 17-2	BPM 8 & 9
		
		// 04/18/17
		//Cell 07 C#7 (addr == 7.d6)  ? {10.d180, 10.d171, 10.d170, 10.d169, 10.d168} :	
		(addr == 7'd28)  ? {10'd180, 10'd171, 10'd170, 10'd169, 10'd168} :	//CELL 7-1  BPM 7 & 8
		(addr == 7'd29)  ? {10'd180, 10'd175, 10'd174, 10'd173, 10'd172} :	//CELL 7-2	BPM 9 & 10
		
		
		
//`ifdef	AAAAAAAAAAAA  
//		(addr == 7'd0)  ? {10'd24, 10'd15, 10'd14, 10'd13, 10'd12} :		//CELL 1: [25][24] ,[15,14] [13,12] [11,10,9,8,7,6,5,4,3,2,1,0]
//		(addr == 7'd1)  ? {10'd50, 10'd41, 10'd40, 10'd39, 10'd38} :
//		//
//		(addr == 7'd2)  ? {10'd76, 10'd67, 10'd66, 10'd65, 10'd64} :		//CELL 3
//		//
//		(addr == 7'd3)  ? {10'd102, 10'd93, 10'd92, 10'd91, 10'd90} :
		
//		(addr == 7'd4)  ? {10'd128, 10'd119, 10'd118, 10'd117, 10'd116} :	//CELL5
		
//		(addr == 7'd5)  ? {10'd154, 10'd145, 10'd144, 10'd143, 10'd142} :
//		(addr == 7'd6)  ? {10'd180, 10'd171, 10'd170, 10'd169, 10'd168} :
//		(addr == 7'd7)  ? {10'd206, 10'd197, 10'd196, 10'd195, 10'd194} :
//		(addr == 7'd8)  ? {10'd232, 10'd223, 10'd222, 10'd221, 10'd220} :
//		(addr == 7'd9)  ? {10'd258, 10'd249, 10'd248, 10'd247, 10'd246} :	//CELL 10
		
//		(addr == 7'd10)  ? {10'd284, 10'd275, 10'd274, 10'd273, 10'd272} :	//CELL 11
		
//		(addr == 7'd11)  ? {10'd310, 10'd301, 10'd300, 10'd299, 10'd298} :
//		(addr == 7'd12)  ? {10'd336, 10'd327, 10'd326, 10'd325, 10'd324} :
//		(addr == 7'd13)  ? {10'd362, 10'd353, 10'd352, 10'd351, 10'd350} :
//		(addr == 7'd14)  ? {10'd388, 10'd379, 10'd378, 10'd377, 10'd376} :
//		(addr == 7'd15)  ? {10'd414, 10'd405, 10'd404, 10'd403, 10'd402} :
//		(addr == 7'd16)  ? {10'd440, 10'd431, 10'd430, 10'd429, 10'd428} :
//		(addr == 7'd17)  ? {10'd466, 10'd457, 10'd456, 10'd455, 10'd454} :
//		(addr == 7'd18)  ? {10'd492, 10'd483, 10'd482, 10'd481, 10'd480} :
//		(addr == 7'd19)  ? {10'd518, 10'd509, 10'd508, 10'd507, 10'd506} :
//		(addr == 7'd20)  ? {10'd544, 10'd535, 10'd534, 10'd533, 10'd532} :
//		(addr == 7'd21)  ? {10'd570, 10'd561, 10'd560, 10'd559, 10'd558} :
		
//		(addr == 7'd22)  ? {10'd596, 10'd587, 10'd586, 10'd585, 10'd584} :	
//		(addr == 7'd23)  ? {10'd622, 10'd613, 10'd612, 10'd611, 10'd610} :	//CELL23
//		(addr == 7'd24)  ? {10'd648, 10'd639, 10'd638, 10'd637, 10'd636} :
//		(addr == 7'd25)  ? {10'd674, 10'd665, 10'd664, 10'd663, 10'd662} :
//		(addr == 7'd26)  ? {10'd700, 10'd691, 10'd690, 10'd689, 10'd688} :	
//		(addr == 7'd27)  ? {10'd726, 10'd717, 10'd716, 10'd715, 10'd714} :	//CELL28
		
//		(addr == 7'd28)  ? {10'd752, 10'd743, 10'd742, 10'd741, 10'd740} :
//		(addr == 7'd29)  ? {10'd778, 10'd769, 10'd768, 10'd767, 10'd766} :
//		(addr == 7'd30)  ? {10'd804, 10'd795, 10'd794, 10'd793, 10'd792} :
//`endif		
		
         Multiport_Switch_out1;
		//		
	//assign Mux_Data_o = Multiport_Switch_out1;
	//
	assign add_x1 = Multiport_Switch_out1[9:0]; 
	assign add_y1 = Multiport_Switch_out1[19:10];  
	assign add_x2 = Multiport_Switch_out1[29:20]; 
	assign add_y2 = Multiport_Switch_out1[39:30];  
	assign add_cells = Multiport_Switch_out1[49:40]; 
	

endmodule  